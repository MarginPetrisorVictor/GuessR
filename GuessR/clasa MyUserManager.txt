using GuessR.Data;
using Microsoft.AspNetCore.Identity;
using Microsoft.Extensions.Options;

namespace GuessR.Models
{
	public class MyUserManager : UserManager<IdentityUser>
	{
		private readonly ApplicationDbContext _dbContext;

		public MyUserManager(IUserStore<IdentityUser> store,
							 IOptions<IdentityOptions> optionsAccessor,
							 IPasswordHasher<IdentityUser> passwordHasher,
							 IEnumerable<IUserValidator<IdentityUser>> userValidators,
							 IEnumerable<IPasswordValidator<IdentityUser>> passwordValidators,
							 ILookupNormalizer keyNormalizer,
							 IdentityErrorDescriber errors,
							 IServiceProvider services,
							 ILogger<UserManager<IdentityUser>> logger,
							 ApplicationDbContext dbContext)
			: base(store, optionsAccessor, passwordHasher, userValidators, passwordValidators, keyNormalizer, errors, services, logger)
		{
			_dbContext = dbContext;
		}


		public override async Task<IdentityResult> CreateAsync(IdentityUser user)
		{
			var result = await base.CreateAsync(user);

			if (result.Succeeded)
			{
				var player = new Player
				{
					Id = user.Id,
					Name = user.UserName
				};

				_dbContext.Players.Add(player);
				await _dbContext.SaveChangesAsync();
			}

			return result;
		}
	}
	}
}
